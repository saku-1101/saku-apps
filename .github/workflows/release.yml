name: Release
on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  contents: write
  # Comment out to enable these permissions if needed.
  # packages: write
  # deployments: write
  # id-token: write

jobs:
  draft_release:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.release-drafter.outputs.tag_name }}
    steps:
      # Get next version
      - uses: release-drafter/release-drafter@v5
        id: release-drafter
        with:
          config-name: release-drafter-git-green-cli.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  install-dependencies:
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install
      - name: Cache bun dependencies
        uses: actions/cache@v3
        id: bun-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun
  # Sample job for GitHub Actions repository.
  # It creates GitHub Releases and push semver(major, minor, patch) git tags.
  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    needs: draft_release
    steps:
      # Extract SemVers from tag (git-green-cli@1.0.0 -> 1 0 0)
      - name: Create SemVer outputs
        uses: actions/github-script@v6
        id: semver
        with:
          script: |
            const TAG_NAME = 'git-green-cli@0.1.1'
            const matched = TAG_NAME.match(/@(\d+)\.(\d+)\.(\d+)/)
            if (matched) {
              console.log(`Major: ${matched[1]}`)
              console.log(`Minor: ${matched[2]}`)
              console.log(`Patch: ${matched[3]}`)
              core.setOutput('major', matched[1])
              core.setOutput('minor', matched[2])
              core.setOutput('patch', matched[3])
            }

      - name: Echo SemVer outputs
        run: |
          echo "Major: ${{ steps.semver.outputs.major }}"
          echo "Minor: ${{ steps.semver.outputs.minor }}"
          echo "Patch: ${{ steps.semver.outputs.patch }}"    

      - uses: actions/checkout@v4
        with:
          ref: "${{ steps.release-drafter.outputs.tag_name }}"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Restore bun dependencies
        id: bun-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun

      - name: Build
        run: bun build-packages
    
      - name: Setup git config
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      # Publish packages to npm
      - uses: actions/setup-node@v4
        with:
          node-version: '21.x'
          registry-url: 'https://registry.npmjs.org'
      - run: |
            npm version ${{ steps.semver.outputs.major }}.${{ steps.semver.outputs.minor }}.${{ steps.semver.outputs.patch }}
            npm publish --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Update major and minor git tags
        run: |
           git push -f origin "refs/tags/${{ needs.draft_release.outputs.tag_name }}:refs/tags/${{ steps.semver.outputs.major }}"
           git push -f origin "refs/tags/${{ needs.draft_release.outputs.tag_name }}:refs/tags/${{ steps.semver.outputs.minor }}"

      - uses: release-drafter/release-drafter@v5
        id: release-drafter
        with:
          config-name: release-drafter-git-green-cli.yml
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}